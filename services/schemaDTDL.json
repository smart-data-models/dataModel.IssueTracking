{
    "@id": "dtmi:com:ngsi-ld:Open311ServiceType;0",
    "@type": "Interface",
    "@context": "dtmi:dtdl:context;2",
    "comment": "Smart Data Models. Open311 Service Type adapted to DTDL from smartdatamodels.org. Source: https://raw.githubusercontent.com/smart-data-models/dataModel.IssueTracking/master/Open311_ServiceType/schema.json",
    "description": "As per Open311 an entity of type ServiceType is an acceptable 311 service request type. A request type can be unique to the city/jurisdiction.",
    "displayName": "Open311ServiceType",
    "contents": [
        {
            "name": "alternateName",
            "writable": true,
            "displayName": "alternateName",
            "@type": "Property",
            "schema": "string",
            "comment": "An alternative name for this item"
        },
        {
            "name": "areaServed",
            "writable": true,
            "displayName": "areaServed",
            "@type": "Property",
            "schema": "string",
            "comment": "The geographic area where a service or offered item is provided"
        },
        {
            "name": "dataProvider",
            "writable": true,
            "displayName": "dataProvider",
            "@type": "Property",
            "schema": "string",
            "comment": "A sequence of characters identifying the provider of the harmonised data entity."
        },
        {
            "name": "dateCreated",
            "writable": true,
            "displayName": "dateCreated",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Entity creation timestamp. This will usually be allocated by the storage platform."
        },
        {
            "name": "dateModified",
            "writable": true,
            "displayName": "dateModified",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Timestamp of the last modification of the entity. This will usually be allocated by the storage platform."
        },
        {
            "name": "description",
            "writable": true,
            "displayName": "description",
            "@type": "Property",
            "schema": "string",
            "comment": "A description of this item"
        },
        {
            "name": "effectiveSince",
            "writable": true,
            "displayName": "effectiveSince",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "The date on which the service type was created. This date might be different than the entity creation date"
        },
        {
            "name": "group",
            "writable": true,
            "displayName": "group",
            "@type": "Property",
            "schema": "string",
            "comment": "A category to group this service type within. This provides a way to group several service request types under one category such as sanitation"
        },
        {
            "name": "jurisdiction_id",
            "writable": true,
            "displayName": "jurisdiction_id",
            "@type": "Property",
            "schema": "string",
            "comment": "The unique ID of the legal entity of the service (i.e. city)."
        },
        {
            "name": "keywords",
            "writable": true,
            "displayName": "keywords",
            "@type": "Property",
            "schema": "string",
            "comment": "A comma separated list of tags or keywords to help users identify the request type. This can provide synonyms of the service_name and group."
        },
        {
            "name": "name",
            "writable": true,
            "displayName": "name",
            "@type": "Property",
            "schema": "string",
            "comment": "The name of this item."
        },
        {
            "name": "open311:metadata",
            "writable": true,
            "displayName": "open311:metadata",
            "@type": "Property",
            "schema": "boolean",
            "comment": "This field is not strictly needed as the proposed entity encompasses the attribute definition as well. If defined, its value must be `true` if the `attributes` property is defined and its array value is not empty. Otherwise it must be equal to `false`"
        },
        {
            "name": "provider",
            "writable": true,
            "displayName": "provider",
            "@type": "Property",
            "schema": "string",
            "comment": "Provider of the service"
        },
        {
            "name": "seeAlso",
            "writable": true,
            "displayName": "seeAlso"
        },
        {
            "name": "service_code",
            "writable": true,
            "displayName": "service_code",
            "@type": "Property",
            "schema": "string",
            "comment": "The unique identifier for the service request type."
        },
        {
            "name": "service_name",
            "writable": true,
            "displayName": "service_name",
            "@type": "Property",
            "schema": "string",
            "comment": "The human readable name of the service request type."
        },
        {
            "name": "source",
            "writable": true,
            "displayName": "source",
            "@type": "Property",
            "schema": "string",
            "comment": "A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object."
        },
        {
            "@type": "Telemetry",
            "name": "location_Point",
            "schema": "point"
        },
        {
            "@type": "Telemetry",
            "name": "location_LineString",
            "schema": "lineString"
        },
        {
            "@type": "Telemetry",
            "name": "location_Polygon",
            "schema": "polygon"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiPoint",
            "schema": "multiPoint"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiLineString",
            "schema": "multiLineString"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiPolygon",
            "schema": "multiPolygon"
        },
        {
            "@type": "Telemetry",
            "name": "attributes",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "As per the [Service Definition](http://wiki.open311.org/GeoReport_v2/#get-service-definition) structure defined by Open 311.",
            "displayName": "attributes"
        },
        {
            "@type": "Telemetry",
            "name": "owner",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)",
            "displayName": "owner"
        },
        {
            "@type": "object",
            "name": "address",
            "comment": "The mailing address",
            "displayName": "address",
            "fields": [
                {
                    "name": "addressCountry",
                    "schema": "string"
                },
                {
                    "name": "addressLocality",
                    "schema": "string"
                },
                {
                    "name": "addressRegion",
                    "schema": "string"
                },
                {
                    "name": "postOfficeBoxNumber",
                    "schema": "string"
                },
                {
                    "name": "postalCode",
                    "schema": "string"
                },
                {
                    "name": "streetAddress",
                    "schema": "string"
                }
            ]
        },
        {
            "@type": "Telemetry",
            "name": "open311:type",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "batch",
                        "displayName": "batch",
                        "enumValue": 1
                    },
                    {
                        "name": "blackbox",
                        "displayName": "blackbox",
                        "enumValue": 2
                    },
                    {
                        "name": "realtime",
                        "displayName": "realtime",
                        "enumValue": 3
                    }
                ]
            }
        }
    ]
}